apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'os-package'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "http://auto-util.rqa.concur.concurtech.org:8081/artifactory/repo/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url { "http://repo.spring.io/milestone" }
        }
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:2.2.6'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RC1")

        classpath ('com.google.guava:guava:15.0'){
            force = true
        }
    }
}


subprojects {
    buildscript {
        repositories {
            mavenCentral()
            mavenLocal()
            jcenter()
            maven {
                url { "http://repo.spring.io/snapshot" }
            }
            maven {
                url { "http://artifactory.concurtech.net/artifactory/libs-release-local" }
            }
            maven {
                url { "http://artifactory.concurtech.net/artifactory/libs-snapshot-local" }
            }
	    maven {
                url "https://plugins.gradle.org/m2/"
            }
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.BUILD-SNAPSHOT")
            classpath 'com.concur:swaggergradleplugin:1.0.4'
            classpath('org.hibernate:hibernate-validator:5.2.0.Final')
            classpath ('com.google.guava:guava:15.0'){
                force = true
            }
        }
    }

    apply plugin: 'java'

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url 'http://10.24.58.2:8081/artifactory/libs-snapshot-local' }
        maven { url 'http://auto-util2.concur.concurtech.org:8081/artifactory/repo/' }
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
        maven { url 'http://oss.jfrog.org/artifactory/repo/' }
        maven { url 'http://repo.spring.io/libs-release' }
    }

    ext {
        log4j2Version = '2.0-rc2'
        componentsVersion = '1.1.1'
        hystrixVersion = "1.4.14"
        springfoxSwaggerVersion = "2.1.2"
    }

    dependencies {
        testCompile('org.easymock:easymock:3.3')
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

build.dependsOn(project("clients").build)
build.dependsOn(project("service").build)

ext {
    artUsername = project.hasProperty('artifactoryUser') ? project.getProperty('artifactoryUser') : ''
    artPassword = project.hasProperty('artifactoryPassword') ? project.getProperty('artifactoryPassword') : ''
}

ospackage {
    packageName = '${theName}'
    version = "${theVersion}"
    release = '1'
    arch = NOARCH
    os = LINUX
    user = 'service'
    directory("/opt/concur/webapps")
    requires("jdk", "1.8.0", GREATER | EQUAL)

    into("/opt/concur/webapps")

    from(project("service").configurations.archives.artifacts.files)
}
